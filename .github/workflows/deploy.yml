name: Spring Boot CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission to Gradle wrapper
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build

    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Build
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .

    - name: Docker Push
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

    - name: SSH and Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.ssh_HOST }}
        username: ${{ secrets.ssh_USERNAME }}
        key: ${{ secrets.ssh_PASSWORD }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
          docker rm -f spring-app || true
          docker run --name spring-app --network server -e profiles=prod -e username=${{ secrets.DB_USERNAME }} -e password=${{ secrets.DB_PASSWORD }} -p 8080:8080 -d ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
          # docker run --name spring -p 8080:8080 -e profiles=prod -e username=root -e password=1234 --network server freshbasil/spring-test:prod


   

 # 
